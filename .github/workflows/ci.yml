name: CI

on:
  push:
    branches: ["main"] # Ejecuta el push de imágenes solo en la rama principal
  pull_request:

jobs:
  build_and_test:
    name: Build, Lint & Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          # SonarCloud necesita el historial completo para un análisis preciso de nuevos issues
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18.x"
          # Habilitar caché para npm acelera las instalaciones en ejecuciones futuras
          cache: "npm"

      - name: Install all dependencies
        run: npm install

      - name: Run linting for all projects
        run: npm run lint

      - name: Run Snyk to check for vulnerabilities
        uses: snyk/snyk-cli-action@v1.5.0
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          command: test
          # Escanea todos los proyectos (frontend y backend) definidos en los workspaces
          args: --all-projects --severity-threshold=high

      - name: SonarCloud Scan (backend)
        uses: SonarSource/sonarqube-scan-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Requerido por la acción de SonarCloud
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }} # <-- Usa el token maestro
        with:
          projectBaseDir: backend

      - name: SonarCloud Scan (frontend)
        uses: SonarSource/sonarqube-scan-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }} # <-- Usa el token maestro, no es para un proyecto específico, sino para tu organización (elimcn)
        with:
          projectBaseDir: frontend

  build-and-push-images:
    name: Build and Push Docker Images
    runs-on: ubuntu-latest
    # Este job solo se ejecuta si el job 'build_and_test' ha sido exitoso
    needs: build_and_test
    # Y solo si el evento es un push a la rama 'main'
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata for backend image
        id: meta_backend
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}/backend
          tags: |
            type=sha,prefix=
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push backend image
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          file: ./backend/Dockerfile.prod
          push: true
          tags: ${{ steps.meta_backend.outputs.tags }}
          labels: ${{ steps.meta_backend.outputs.labels }}

      - name: Extract metadata for frontend image
        id: meta_frontend
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}/frontend
          tags: |
            type=sha,prefix=
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push frontend image
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          file: ./frontend/Dockerfile.prod
          push: true
          tags: ${{ steps.meta_frontend.outputs.tags }}
          labels: ${{ steps.meta_frontend.outputs.labels }}
